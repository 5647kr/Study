// let num= 10;

// =기호는 데이터를 할당하는연산을 수행하기 때문에 할당연산자라 한다.
// 연산자는 연산을 처리하는데 사용되는 기호를 의미한다.
// 할당연산자 외에도 다양한 연산자가 있다.


// ------------------------------------------------------------


// 산술연산자

// 산술연산자로는 이항산술, 단항산술, 단항 부정이 있다.
// 이항산술로는 + , - , * , /, %, ** 로 각각 덧셈 뺼셈 곱셈 나눗셈 나머지, 제곱을 의미한다.
// 단항산술로는 변수에 1 증가또는 감수하게 된다.
// 단항부정은 x의 부호를 부정한다.

let num1= 10 % 3;
console.log(num1);

let num2= 10 ** 3;
console.log(num2);

let num3= 1;
num3= num3++; //후치라 하며, ~한 후에를 의미해, num3을 할당후에 1증가한다.
console.log(num3);

let num4= 1;
num4= ++num4; //전치라 하며, ~하기 전에를 의미하여, num4를 할당하기 전에 1를 증가한다.
console.log(num4);

let num5= 1;
num5= num5--; //후치라 하며, ~한 후에를 의미해, num3을 할당후에 1감소한다.
console.log(num5);

let num6= 1;
num6= --num6; //전치라 하며, ~하기 전에를 의미하여, num4를 할당하기 전에 1를 감소한다.
console.log(num6);

let num7= 1;
num7= -num7;
console.log(num7);

let num8= -1;
num8= -num8;
console.log(num8);


// ------------------------------------------------------------


// 대입연산자(할당연산자), 복합대입연산자

let num9= -1;

// 오른쪽에 있는 데이터를 왼쪽에 있는 변수에 할당할 때 사용한다.

// 복합대입연산자

let num10= 10;
num10= num10 + 2;
console.log(num10);

// 이와 같이 변수에 어떤 값을 연산할 경우 할당연산자 앞에 사용하여 생략한다.

let num11= 10;
num11 += 2; //num11 = num11 + 2;
console.log(num11);


// ------------------------------------------------------------


// 비교연산자

// 좌항의 값과 우항의 값을 비교할 떄 사용한다.

let num12= 10;
let num13= 20;
let result1= num12 < num13;
console.log(result1);

// 일치 연산자와 불일치연산자

let num14= 10; //숫자형
let strnum1= '10'; //문자열
let result2= num14 == strnum1;
console.log(result2);

// 숫자와 문자라 서로 다른데도 같다고 나온다 이는 형변환떄문이다.
// 형변환이란 비교연산자가 비교과정을 수행할 떄 양쪽의 데이터의 자료형이 다를경우 인위적으로 변경시켜 하나로 일치시킨다.
// 만약 자료형까지도 비교할 경우 일치연산차(===)를 사용한다.

let num15= 10; //숫자형
let strnum2= '10'; //문자열
let result3= num15 === strnum2;
console.log(result3);


// ------------------------------------------------------------


// 논리연산자

// 논리연산자는 and연산자(&&), or연산자(||), 부정연산자(!)를 사용한다.

// and연산자(&&)
// 양쪽이 모두 참이여야 참이 할당된다.

let result4= true && true;
console.log(result4);

// or연산자(||)
// 둘중 하나만 참이면 참이 할당된다.

let result5= true || false;
console.log(result5);

// 부정연산자(!)
// 모든결과를 부정한다.

let result6= !(false || false);
console.log(result6);


// ------------------------------------------------------------


// 삼항연산자

// 삼항연산자는 ?와 :을 사용한다.

let result7= 10 < 20 ? '참입니다' : '거짓입니다.';
console.log(result7);


// ------------------------------------------------------------


// 연산자 우선순위

// 연산자가 다양함에 따라 우선순위가 있다.

let result8= 10 + 10 *3;
console.log(result8);

// 우선순위로 그룹화하면 편하다.

let result9= 10 + (10 *3);
console.log(result9);

// ()는 우선순위가 1순위이기 떄문이다.