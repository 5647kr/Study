// 지정한 조건이 참으로 평가되는 동안 지정한 블록문을 실행하는 문법을 의미한다.

// 대표적은로 while, do~while, for문등이 있다.

// ------------------------------------------------------------

// while

// 기본문법
// 조건식이 참으로 평가되는 동안 중괄호 안에 있는 코드가 실행된다.
// 조건이 참이 되지 않으면 실행되지 않는다.

// while(조건식) {

// }

let num1= 1;
while(num1 <= 100) {
    console.log(num1); //num1을 작은따옴표로 감싸지 않는다.!
    num1++;
}


// ------------------------------------------------------------


// 무한반복 //주의

// 반복문이 종료되지않고 무한이 실행되는걸 의미한다.

// let num2= 1;
// while(num2 <= 100) {
//     console.log(num2);
// }


// ------------------------------------------------------------


// do~while

// do에 해당하는 코드는 한번은 실행되고 while키워드를 반복한다.
// while문은 조건식이 거짓이기때문에 실행되지 않지만 do문에 의해 한번은 실행하게 된다.

// 기본문법

// do {
//     // 조건문이 참이면 실행할 구문
// }
// while(조건문)

let num3= 1;
do {
    console.log('do');
}
while(false);


// ------------------------------------------------------------


// for

// 지정한 횟수가 끝날 떄까지 블록문을 반복샐행한다.
// for문 안에 for문을 중첩하여 사용할 수 있다.
// 배열에서도 사용할 수 있다.

// 기본문법

// for(초깃값; 조건식; 증감식) {

// }

// 예제

for(let i1 = 0; i1 <= 5; i1++) {
    console.log(i1);
}

const arr1 = ['apple','banana', 'orange'];
for(let i2 = 0; i2 < arr1.length; i2++) {
    console.log(arr1[i2]);
}


// ------------------------------------------------------------


// for in

// for(let index in 반복의 대상이 되는 배열) {
//     console.log(반복의 대상이 되는 배열[index]);
// }

const obj = {
    name: '철수',
    age : 20,
};
for(let key in obj) {
    console.log(obj[key]);
}


// ------------------------------------------------------------


// break와 continue

// break는 반복문을 즉시 종료시킨다.
// continue는 해당루프를 건너뛰는 역활을 한다.

for (let i3 = 0; i3 < 5; i3++) {
    if(i3 === 3) break;
    console.log(i3);
}

for (let i4 = 0; i4 < 5; i4++) {
    if(i4 === 3) continue;
    console.log(i4);
}